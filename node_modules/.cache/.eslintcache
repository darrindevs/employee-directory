[{"/Users/zaino/bbc/employee-directory/src/index.js":"1","/Users/zaino/bbc/employee-directory/src/reportWebVitals.js":"2","/Users/zaino/bbc/employee-directory/src/App.js":"3","/Users/zaino/bbc/employee-directory/src/components/Search/index.js":"4","/Users/zaino/bbc/employee-directory/src/components/Table/index.js":"5","/Users/zaino/bbc/employee-directory/src/components/Header/index.js":"6","/Users/zaino/bbc/employee-directory/src/utils/api.js":"7"},{"size":500,"mtime":1621577654382,"results":"8","hashOfConfig":"9"},{"size":364,"mtime":1621577654391,"results":"10","hashOfConfig":"9"},{"size":329,"mtime":1621651739952,"results":"11","hashOfConfig":"9"},{"size":641,"mtime":1621652580732,"results":"12","hashOfConfig":"9"},{"size":2593,"mtime":1621653976663,"results":"13","hashOfConfig":"9"},{"size":464,"mtime":1621652775420,"results":"14","hashOfConfig":"9"},{"size":253,"mtime":1621577654403,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ba8v1x",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/Users/zaino/bbc/employee-directory/src/index.js",[],"/Users/zaino/bbc/employee-directory/src/reportWebVitals.js",[],"/Users/zaino/bbc/employee-directory/src/App.js",[],"/Users/zaino/bbc/employee-directory/src/components/Search/index.js",[],"/Users/zaino/bbc/employee-directory/src/components/Table/index.js",["32"],"// ✅ todo import react \n// ✅ todo import the API call\n// ✅ todo import component styles \nimport React from \"react\";\nimport API from \"../../utils/api.js\"\nimport Search from \"../Search\"\nimport \"./style.css\";\n\n// ✅ todo set up state \nclass Table extends React.Component {\n\n  state = {\n    search: \"\",\n    sortOrder: \"\",\n    results: []\n  }\n\n  // ✅ todo get the Api call of random users\n  componentDidMount() {\n    API.ApiSearch()\n      .then(res => {\n        this.setState({ results: res.data.results })\n        console.log(this.state.results)\n      }).catch(err => console.log(err))\n  }\n\n  // ✅ todo handle the search input \n  handleInputChange = event => {\n\n    if (event.target.name === \"search\") {\n      const searchTerm = event.target.value.toLowerCase();\n      this.setState({\n        search: searchTerm\n      })\n    }\n  }\n\n  // ✅ todo Sort by name \n  sortName = () => {\n    const sortNames = this.state.results.sort((a, b) => {\n      if (b.name.first > a.name.first) {\n        return -1\n      }\n      if (a.name.first > b.name.first) {\n        return 1\n      }\n      return 0;\n    });\n\n    if (this.state.sortOrder === \"DESC\") {\n      sortNames.reverse();\n      this.setState({ sortOrder: \"ASC\" });\n    } else {\n      this.setState({ sortOrder: \"DESC\" });\n    }\n    this.setState({ results: sortNames })\n  }\n\n  \n  // ✅ todo render the table \n  render() {\n    return (\n      <div>\n        <Search handleInputChange={this.handleInputChange}\n          search={this.state.search} />\n\n        <div>\n        <table className=\"table\">\n            <thead>\n              <tr>\n                <th></th>\n                <th><a onClick={this.sortName}><i className=\"fas fa-sort-circle me-3\"></i>Name</a></th>\n                <th>Email</th>\n                <th>City</th>\n                <th>Age</th>\n              </tr>\n            </thead>\n\n            { this.state.results && this.state.results.map(item =>\n                item.name.first.toLowerCase().includes(this.state.search) ?\n                  <tbody key={item.login.uuid}>\n                    <tr>\n                      <td ><img src={item.picture.thumbnail} className=\"avatar\" alt=\"employee\"/></td>\n                      <td >{item.name.first}</td>\n                      <td ><a href=\"mailto:{item.email}\">{item.email}</a></td>\n                      <td >{item.location.city}</td>\n                      <td>{item.dob.age}</td>  \n                    </tr>\n                  </tbody>\n                  :\n                    null\n              )}\n          </table>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Table;","/Users/zaino/bbc/employee-directory/src/components/Header/index.js",[],"/Users/zaino/bbc/employee-directory/src/utils/api.js",["33"],"// ✅ todo import axios\nimport axios from \"axios\";\n// ✅ todo use https://randomuser.me/ for easy random user results\nconst url = \"https://randomuser.me/api/?results=12\";\n\nexport default {\n  ApiSearch: function () {\n    return axios.get(url);\n  },\n};\n",{"ruleId":"34","severity":1,"message":"35","line":72,"column":21,"nodeType":"36","endLine":72,"endColumn":48},{"ruleId":"37","severity":1,"message":"38","line":6,"column":1,"nodeType":"39","endLine":10,"endColumn":3},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]